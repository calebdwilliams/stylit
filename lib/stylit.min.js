export class StyleSheetRegistry{constructor(){this.adopters=new WeakMap;this.registry=new Map;this.observer=new MutationObserver(e=>{e.forEach(e=>{[...e.removedNodes].forEach(e=>{if(this.adopters.has(e)){this.adopters.delete(e)}else if(this.adopters.has(e.shadowRoot)){this.adopters.delete(e.shadowRoot)}})})});this.observer.observe(document.body,{childList:true});this._error=Symbol("error");this._pending=Symbol("pending");this.pending=new Set}adopt(e,t){const r=this.adopters.get(e)||new Map;if(!r.size){this.adopters.set(e,r)}if(!r.has(t)&&this.get(t)!==this._pending){const s=this.get(t);e.appendChild(s);r.set(t,s);return Promise.resolve(s)}else if(this.get(t)===this._pending){return new Promise((s,i)=>{const n=window.setInterval(()=>{if(this.get(t)){const o=this.get(t);if(o!==this._error&&o!==this._pending){e.appendChild(o);r.set(t,o);s(o);window.clearInterval(n)}else if(o===this._error){i();window.clearInterval(n)}}},200)})}else{return Promise.resolve(r.get(t))}}createSheet(e){const t=document.createElement("style");t.textContent=e;return t}define(e,t){this.registry.set(e,t);return Promise.resolve({name:e})}get(e){if(this.registry.get(e)){const t=this.registry.get(e);if(t===this._pending||t===this._error){return t}return this.createSheet(t)}else{throw new Error(``)}}load(e,t,r){this.registry.set(e,this._pending);return fetch(t,r).then(e=>e.text()).then(t=>{this.define(e,t);return e}).catch(t=>{this.define(e,this._error)})}};